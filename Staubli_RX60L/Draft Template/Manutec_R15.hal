# core HAL config file for simulation - 6 axis

# load RT modules
loadrt [KINS]KINEMATICS
#autoconverted genserkins
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD traj_period_nsec=[EMCMOT]TRAJ_PERIOD num_joints=[KINS]JOINTS 

# hostmot2 driver
# if you have any firmware trouble, enable the debug flags here and see what's going on in the syslog
#loadrt hostmot2 debug_idrom=1 debug_module_descriptors=1 debug_pin_descriptors=1 debug_modules=1
loadrt hostmot2
loadrt lin2rev count=7
loadrt not names=not-ss-run

# load low-level driver
loadrt [HM2](DRIVER) config=[HM2](CONFIG)
 
# --- Threads ---
addf [HM2](BRD)read servo-thread

addf not-ss-run servo-thread

addf motion-command-handler servo-thread
addf motion-controller servo-thread

addf lin2rev.0 servo-thread
addf lin2rev.1 servo-thread
addf lin2rev.2 servo-thread
addf lin2rev.3 servo-thread
addf lin2rev.4 servo-thread
addf lin2rev.5 servo-thread
addf lin2rev.6 servo-thread

addf [HM2](BRD)write servo-thread

# estop loopback
# if you have an actual e-stop chain with e-stop button and limit switches you
# may add output and input to the mesa card here.
net estop-loop iocontrol.0.user-enable-out iocontrol.0.emc-enable-in

# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change iocontrol.0.tool-changed

# # --- Enable ---
net j0.enable joint.0.amp-enable-out => [HM2](STMBL)0.enable-00
net j1.enable joint.1.amp-enable-out => [HM2](STMBL)1.enable-00
net j2.enable joint.2.amp-enable-out => [HM2](STMBL)2.enable-00
net j3.enable joint.3.amp-enable-out => [HM2](STMBL)3.enable-00
net j4.enable joint.4.amp-enable-out => [HM2](STMBL)4.enable-00
net j5.enable joint.5.amp-enable-out => [HM2](STMBL)5.enable-00
net j6.enable joint.6.amp-enable-out => [HM2](STMBL)6.enable-00
# 
# # --- Fault signals ---
net j0.fault [HM2](STMBL)0.fault-00 => joint.0.amp-fault-in
net j1.fault [HM2](STMBL)1.fault-00 => joint.1.amp-fault-in
net j2.fault [HM2](STMBL)2.fault-00 => joint.2.amp-fault-in
net j3.fault [HM2](STMBL)3.fault-00 => joint.3.amp-fault-in
net j4.fault [HM2](STMBL)4.fault-00 => joint.4.amp-fault-in
net j5.fault [HM2](STMBL)5.fault-00 => joint.5.amp-fault-in
net j6.fault [HM2](STMBL)6.fault-00 => joint.6.amp-fault-in
 
# net fault-reset => rplc.reset-faults
#  net ss-state [HM2](BRD)sserial.port-0.port_state # => rplc.ss-state
#  net ss-run rplc.ss-run => [HM2](BRD)sserial.port-0.run
#  net ss-runs <= rplc.ss-runs
net sserial-reset => not-ss-run.in
net ss-run not-ss-run.out => [HM2](BRD)sserial.port-0.run

# # --- Position command ---
# TODO: !
net j0.poscmd joint.0.motor-pos-cmd => lin2rev.0.cmd-in
net j1.poscmd joint.1.motor-pos-cmd => lin2rev.1.cmd-in 
net j2.poscmd joint.2.motor-pos-cmd => lin2rev.2.cmd-in 
net j3.poscmd joint.3.motor-pos-cmd => lin2rev.3.cmd-in 
net j4.poscmd joint.4.motor-pos-cmd => lin2rev.4.cmd-in
net j5.poscmd joint.5.motor-pos-cmd => lin2rev.5.cmd-in 
net j6.poscmd joint.6.motor-pos-cmd => lin2rev.6.cmd-in

setp lin2rev.0.scale [JOINT_0](GEAR_RATIO)
setp lin2rev.1.scale [JOINT_1](GEAR_RATIO)
setp lin2rev.2.scale [JOINT_2](GEAR_RATIO)
setp lin2rev.3.scale [JOINT_3](GEAR_RATIO)
setp lin2rev.4.scale [JOINT_4](GEAR_RATIO)
setp lin2rev.5.scale [JOINT_5](GEAR_RATIO)
setp lin2rev.6.scale [JOINT_6](GEAR_RATIO)

net j0.mposcmd lin2rev.0.cmd-out => [HM2](STMBL)0.pos_cmd
net j1.mposcmd lin2rev.1.cmd-out => [HM2](STMBL)1.pos_cmd
net j2.mposcmd lin2rev.2.cmd-out => [HM2](STMBL)2.pos_cmd
net j3.mposcmd lin2rev.3.cmd-out => [HM2](STMBL)3.pos_cmd
net j4.mposcmd lin2rev.4.cmd-out => [HM2](STMBL)4.pos_cmd
net j5.mposcmd lin2rev.5.cmd-out => [HM2](STMBL)5.pos_cmd
net j6.mposcmd lin2rev.6.cmd-out => [HM2](STMBL)6.pos_cmd
# 
# # --- Position feedback ---
net j0.posfb [HM2](STMBL)0.pos_fb => lin2rev.0.fb-in
net j1.posfb [HM2](STMBL)1.pos_fb => lin2rev.1.fb-in
net j2.posfb [HM2](STMBL)2.pos_fb => lin2rev.2.fb-in
net j3.posfb [HM2](STMBL)3.pos_fb => lin2rev.3.fb-in
net j4.posfb [HM2](STMBL)4.pos_fb => lin2rev.4.fb-in
net j5.posfb [HM2](STMBL)5.pos_fb => lin2rev.5.fb-in
net j6.posfb [HM2](STMBL)6.pos_fb => lin2rev.6.fb-in
# 
net j0.mposfb lin2rev.0.fb-out => joint.0.motor-pos-fb
net j1.mposfb lin2rev.1.fb-out => joint.1.motor-pos-fb
net j2.mposfb lin2rev.2.fb-out => joint.2.motor-pos-fb
net j3.mposfb lin2rev.3.fb-out => joint.3.motor-pos-fb
net j4.mposfb lin2rev.4.fb-out => joint.4.motor-pos-fb
net j5.mposfb lin2rev.5.fb-out => joint.5.motor-pos-fb
net j6.mposfb lin2rev.6.fb-out => joint.6.motor-pos-fb

# # --- Home, Limit switches ---
net j0.home [HM2](IO)73.in => joint.0.home-sw-in
net j1.home [HM2](IO)72.in => joint.1.home-sw-in
net j2.home [HM2](IO)75.in => joint.2.home-sw-in
net j3.home [HM2](IO)74.in => joint.3.home-sw-in
net j4.home [HM2](IO)77.in => joint.4.home-sw-in
net j5.home [HM2](IO)76.in => joint.5.home-sw-in

# --- Kinematics ---
# FIXME:
#max iterations for genserkins
setp genserkins.max-iterations 5

#looks like http://juve.ro/blog/puma

setp genserkins.A-0 0
setp genserkins.A-1 0
setp genserkins.A-2 500
setp genserkins.A-3 0
setp genserkins.A-4 0
setp genserkins.A-5 0

setp genserkins.ALPHA-0 0 
setp genserkins.ALPHA-1 1.570796326
setp genserkins.ALPHA-2 0 
setp genserkins.ALPHA-3 1.570796326
setp genserkins.ALPHA-4 -1.570796326
setp genserkins.ALPHA-5 1.570796326

#denavit hartenberg manipulation
setp genserkins.D-0 665
setp genserkins.D-1 0
setp genserkins.D-2 0
setp genserkins.D-3 730
setp genserkins.D-4 0
setp genserkins.D-5 99.5

# --- Simulator ---

#vismach simulator
loadusr -W ./manutec_r15_gui

net j0.poscmd manutec_r15_gui.joint1
net j1.poscmd manutec_r15_gui.joint2
net j2.poscmd manutec_r15_gui.joint3
net j3.poscmd manutec_r15_gui.joint4
net j4.poscmd manutec_r15_gui.joint5
net j5.poscmd manutec_r15_gui.joint6
